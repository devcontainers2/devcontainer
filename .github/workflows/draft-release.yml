name: Draft release
on:
  workflow_dispatch:
jobs:
  build-devcontainer:
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest, target: x86_64-unknown-linux-gnu }
          - { os: windows-latest, target: x86_64-pc-windows-msvc }
          - { os: macos-latest, target: x86_64-apple-darwin }
          - { os: macos-latest, target: aarch64-apple-darwin }
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v1
      - run: deno compile -A main.ts --target ${{ matrix.target }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: devcontainer
  create-draft-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: get-devcontainer-version
        run: |
          devcontainer_version=$(jq -r .version deno.json)
          echo "devcontainer-version=$devcontainer_version" >>$GITHUB_OUTPUT
      - uses: actions/download-artifact@v3
        with:
          path: artifacts
      - run: |
          for x in *; do
            mv -v "$x/devcontainer" "devcontainer-$x"
            rm -rf "$x"
          done
        working-directory: artifacts
      - run: |
          gh release create \
            -R ${{ github.repository }}
            -d \
            --generate-notes \
            v${{ steps.get_deno_version.outputs.deno_version }} \
            *
        working-directory: artifacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
